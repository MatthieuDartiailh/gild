# --------------------------------------------------------------------------------------
# Copyright 2020 by Glaze Authors, see git history for more details.
#
# Distributed under the terms of the BSD license.
#
# The full license is in the file LICENCE, distributed with this software.
# --------------------------------------------------------------------------------------
"""Manifest of the icon manager plugin.

"""
import os
from typing import TYPE_CHECKING

import enaml.icon
from enaml.workbench.api import PluginManifest, ExtensionPoint, Extension

from ..preferences import Preferences
from .icon_theme import IconTheme


# ======================================================================================
# --- Factories ------------------------------------------------------------------------
# ======================================================================================

if TYPE_CHECKING:
    from .plugin import IconManagerPlugin

def icons_plugin_factory() -> "IconManagerPlugin":
    """ Factory function for the LogPlugin.

    """
    from .plugin import IconManagerPlugin
    return IconManagerPlugin()


# ======================================================================================
# --- Manifest -------------------------------------------------------------------------
# ======================================================================================

enamldef IconManagerManifest(PluginManifest):
    """Manifest of the icon manager plugin providing icon to the GUI.

    """
    #: Id of the plugin.
    id = "glaze.icons"
    factory = icons_plugin_factory

    # ==================================================================================
    # --- Extension points -------------------------------------------------------------
    # ==================================================================================

    ExtensionPoint:
        id = "icon_theme"
        description = "Point to which plugin can contribute icon themes."

    ExtensionPoint:
        id = "icon_theme_extension"
        description = ("Point to which plugin can contribute icon theme "
                       "extensions.")

    # ==================================================================================
    # --- Extensions -------------------------------------------------------------------
    # ==================================================================================

    Extension:
        id = "preferences"
        point = "glaze.preferences.plugin"
        Preferences:
            id = "glaze.icons"
            description = "Default icon theme to use."

    Extension:
        id = "themes"
        point = "glaze.icons.icon_theme"
        description = "Add the default icon themes based on qtawesome."

        IconTheme:
            id = "glaze.FontAwesome"

            get_icon => (manager, icon_id):
                from qtawesome import icon as qicon
                try:
                    icon = enaml.icon.Icon(_tkdata=qicon("fa5." + icon_id))
                except Exception:
                    icon = None

                return icon

        IconTheme:
            id = "glaze.ElusiveIcon"

            get_icon => (manager, icon_id):
                from qtawesome import icon as qicon
                try:
                    icon = enaml.icon.Icon(_tkdata=qicon("ei." + icon_id))
                except Exception:
                    icon = None

                return icon
